{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang2070\deflangfe2070{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}
{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}
{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \snext15 VDM;}{\*\cs16 \additive \f5\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_COV;}{\*\cs17 \additive \f5\cf6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_NCOV;}{
\s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \sbasedon15 \snext18 VDM_TC_TABLE;}{\s19\ql \li0\ri0\widctlpar
\tqc\tx4252\tqr\tx8504\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \sbasedon0 \snext19 \styrsid4661156 header;}{\s20\ql \li0\ri0\widctlpar
\tqc\tx4252\tqr\tx8504\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \sbasedon0 \snext20 \styrsid4661156 footer;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid333788\rsid3284685
\rsid4661156}{\*\generator Microsoft Word 11.0.5604;}{\info{\title class Jogo }{\author anamarg83@hotmail.com}{\operator Mario}{\creatim\yr2012\mo12\dy7\hr22\min6}{\revtim\yr2012\mo12\dy7\hr22\min27}{\version3}{\edmins3}{\nofpages12}{\nofwords3183}
{\nofchars17193}{\*\company IFAD}{\nofcharsws20336}{\vern24689}}\margl1701\margr1701\margt1417\margb1417 \widowctrl\ftnbj\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace180\dgvspace180
\dghorigin1701\dgvorigin1984\dghshow0\dgvshow0\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl\nojkernpunct\rsidroot333788 \fet0{\*\ftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid4661156 \chftnsep 
\par }}{\*\ftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid4661156 \chftnsepc 
\par }}{\*\aftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid4661156 \chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid4661156 \chftnsepc 
\par }}\sectd \linex0\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid333788 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 class Jogo 
\par \tab 
\par \tab types 
\par \tab \tab public String = seq of char;
\par \tab 
\par \tab instance variables 
\par \tab \tab 
\par \tab \tab private baralho : seq of Peca := [];
\par \tab \tab private dicionario : set of String := \{\};
\par \tab \tab }{\insrsid333788\charrsid333788 private jogadores : seq of Jogador := [];
\par \tab \tab private tabuleiro : Tabuleiro;
\par \tab \tab --1 se e a vez do jogador1 jogar, 2 se e a vez do jogador 2
\par \tab \tab private vez : nat1 := 1;
\par \tab \tab 
\par \tab inv len baralho <= 120;
\par \tab inv len jogadores <= 2;
\par \tab inv vez = 1 or vez = 2; 
\par \tab 
\par \tab operations 
\par \tab \tab  
\par \tab \tab  public Jogo : () ==> Jogo
\par \tab \tab  \tab \tab Jogo() == (
\par \tab \tab  \tab \tab 
\par \tab \tab  \tab \tab criar_baralho();
\par \tab \tab  \tab \tab tabuleiro := new Tabuleiro();
\par \tab \tab  \tab \tab 
\par \tab \tab  \tab \tab return self;
\par \tab \tab  \tab );
\par \tab \tab  \tab \tab 
\par \tab \tab  \tab \tab 
\par \tab \tab  
\par \tab \tab public Jogo :  seq of Jogador ==> Jogo
\par                Jogo(jogs) == (
\par                
\par            \tab    jogadores := jogs ;
\par            \tab    tabuleiro := new Tabuleiro();
\par                criar_baralho();
\par                
\par                return self;
\par           );
\par                
\par         public getVez: () ==> nat1
\par         \tab \tab getVez() == return vez;
\par         \tab \tab 
\par          public setVez: nat1 ==> ()
\par         \tab \tab setVez(n_vez) == vez := n_vez;
\par         \tab \tab \tab \tab 
\par         }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 public getDicionario: () ==> set of String
\par \tab \tab \tab     getDicionario() == return dicionario;
\par \tab \tab 
\par \tab \tab }{\insrsid333788\charrsid333788 -- o set que e passado como parametro e gerado por uma funcao em Java\tab     
\par \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 public setDicionario: set of String ==> ()
\par \tab \tab \tab     }{\insrsid333788\charrsid333788 setDicionario(dic) ==dicionario := dic;
\par \tab \tab \tab     
\par \tab \tab public getTabuleiro: () ==> Tabuleiro
\par \tab \tab \tab \tab getTabuleiro() == return tabuleiro;
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab 
\par \tab \tab public setTabuleiro: Tabuleiro ==> ()
\par \tab \tab \tab \tab \tab setTabuleiro(tab) == tabuleiro := tab;
\par \tab \tab \tab     \tab      \tab \tab        
\par \tab \tab \tab 
\par \tab \tab public getJogadores: () ==> seq of Jogador
\par \tab \tab \tab     getJogadores() == return jogadores;
\par \tab \tab \tab     
\par \tab \tab public setJogadores: seq of Jogador ==> ()
\par \tab \tab \tab     setJogadores(jogs) ==jogadores := jogs;
\par \tab \tab \tab     \tab      
\par \tab \tab 
\par \tab \tab public getBaralho: () ==> seq of Peca 
\par                getBaralho() == return baralho;
\par \tab \tab 
\par \tab \tab public setBaralho: seq of Peca ==> ()
\par        \tab \tab setBaralho(bar) == baralho := bar;
\par \tab \tab 
\par \tab \tab public criar_baralho: () ==> ()
\par \tab \tab \tab \tab criar_baralho() == (
\par \tab         
\par             dcl peca1 : Peca := new Peca('A',  1);
\par             dcl peca2 : Peca := new Peca('A',  1);
\par             dcl peca3 : Peca := new Peca('A',  1);
\par             dcl peca4 : Peca := new Peca('A',  1);
\par             dcl peca5 : Peca := new Peca('A',  1);
\par             dcl peca6 : Peca := new Peca('A',  1);
\par             dcl peca7 : Peca := new Peca('A',  1);
\par             dcl peca8 : Peca := new Peca('A',  1);
\par             dcl peca9 : Peca := new Peca('A',  1);
\par             dcl peca10 : Peca := new Peca('A', 1);
\par             dcl peca11 : Peca := new Peca('A', 1);
\par             dcl peca12 : Peca := new Peca('A', 1);
\par             dcl peca13 : Peca := new Peca('A', 1);
\par             dcl peca14 : Peca := new Peca('A', 1);
\par             
\par             dcl peca15 : Peca := new Peca('B', 3);
\par             dcl peca16 : Peca := new Peca('B', 3);
\par             dcl peca17 : Peca := new Peca('B', 3);
\par             
\par             dcl peca18 : Peca := new Peca('C', 2);
\par             dcl peca19 : Peca := new Peca('C', 2);
\par             dcl peca20 : Peca := new Peca('C', 2);
\par             dcl peca21 : Peca := new Peca('C', 2);
\par             
\par             }{\insrsid4661156 dcl peca22 : Peca := new Peca('}{\insrsid3284685 \\}{\insrsid4661156 xc3}{\insrsid333788\charrsid333788 ', 3);
\par             dcl}{\insrsid3284685  peca23 : Peca := new Peca('\\}{\insrsid4661156 xc3}{\insrsid333788\charrsid333788 ', 3);
\par             
\par             dcl peca24 : Peca := new Peca('D', 2);
\par             dcl peca25 : Peca := new Peca('D', 2);
\par             dcl peca26 : Peca := new Peca('D', 2);
\par             dcl peca27 : Peca := new Peca('D', 2);
\par             dcl peca28 : Peca := new Peca('D', 2);
\par             
\par             dcl peca29 : Peca := new Peca('E', 1);
\par             dcl peca30 : Peca := new Peca('E', 1);
\par             dcl peca31 : Peca := new Peca('E', 1);
\par             dcl peca32 : Peca := new Peca('E', 1);
\par             dcl peca33 : Peca := new Peca('E', 1);
\par             dcl peca34 : Peca := new Peca('E', 1);
\par             dcl peca35 : Peca := new Peca('E', 1);
\par             dcl peca36 : Peca := new Peca('E', 1);
\par             dcl peca37 : Peca := new Peca('E', 1);
\par             dcl peca38 : Peca := new Peca('E', 1);
\par             dcl peca39 : Peca := new Peca('E', 1);
\par             
\par             dcl peca40 : Peca := new Peca('F', 4);
\par             dcl peca41 : Peca := new Peca('F', 4);
\par             
\par             dcl peca42 : Peca := new Peca('G', 4);
\par             dcl peca43 : Peca := new Peca('G', 4);
\par         
\par             dcl peca44 : Peca := new Peca('H', 4);
\par             dcl peca45 : Peca := new Peca('H', 4);
\par         
\par             dcl peca46 : Peca := new Peca('I', 1);
\par             dcl peca47 : Peca := new Peca('I', 1);
\par             dcl peca48 : Peca := new Peca('I', 1);
\par             dcl peca49 : Peca := new Peca('I', 1);
\par             dcl peca50 : Peca := new Peca('I', 1);
\par             dcl peca51 : Peca := new Peca('I', 1);
\par             dcl peca52 : Peca := new Peca('I', 1);
\par             dcl peca53 : Peca := new Peca('I', 1);
\par             dcl peca54 : Peca := new Peca('I', 1);
\par             dcl peca55 : Peca := new Peca('I', 1);
\par             
\par             dcl peca56 : Peca := new Peca('J', 5);
\par             dcl peca57 : Peca := new Peca('J', 5);
\par         
\par             dcl peca58 : Peca := new Peca('L', 2);
\par             dcl peca59 : Peca := new Peca('L', 2);
\par             dcl peca60 : Peca := new Peca('L', 2);
\par             dcl peca61 : Peca := new Peca('L', 2);
\par             dcl peca62 : Peca := new Peca('L', 2);
\par             
\par             dcl peca63 : Peca := new Peca('M', 1);
\par             dcl peca64 : Peca := new Peca('M', 1);
\par             dcl peca65 : Peca := new Peca('M', 1);
\par             dcl peca66 : Peca := new Peca('M', 1);
\par             dcl peca67 : Peca := new Peca('M', 1);
\par             dcl peca68 : Peca := new Peca('M', 1);
\par         
\par             dcl peca69 : Peca := new Peca('N', 3);
\par             dcl peca70 : Peca := new Peca('N', 3);
\par             dcl peca71 : Peca := new Peca('N', 3);
\par             dcl peca72 : Peca := new Peca('N', 3);
\par             
\par             dcl peca73 : Peca := new Peca('O', 1);
\par             dcl peca74 : Peca := new Peca('O', 1);
\par             dcl peca75 : Peca := new Peca('O', 1);
\par             dcl peca76 : Peca := new Peca('O', 1);
\par             dcl peca77 : Peca := new Peca('O', 1);
\par             dcl peca78 : Peca := new Peca('O', 1);
\par             dcl peca79 : Peca := new Peca('O', 1);
\par             dcl peca80 : Peca := new Peca('O', 1);
\par             dcl peca81 : Peca := new Peca('O', 1);
\par             dcl peca82 : Peca := new Peca('O', 1);
\par             
\par             dcl peca83 : Peca := new Peca('P', 2);
\par             dcl peca84 : Peca := new Peca('P', 2);
\par             dcl peca85 : Peca := new Peca('P', 2);
\par             dcl peca86 : Peca := new Peca('P', 2);
\par         
\par             dcl peca87 : Peca := new Peca('Q', 6);
\par             
\par             dcl peca88 : Peca := new Peca('R', 1);
\par             dcl peca89 : Peca := new Peca('R', 1);
\par             dcl peca90 : Peca := new Peca('R', 1);
\par             dcl peca91 : Peca := new Peca('R', 1);
\par             dcl peca92 : Peca := new Peca('R', 1);
\par             dcl peca93 : Peca := new Peca('R', 1);
\par         
\par             dcl peca94 : Peca := new Peca('S', 1);
\par             dcl peca95 : Peca := new Peca('S', 1);
\par             dcl peca96 : Peca := new Peca('S', 1);
\par             dcl peca97 : Peca := new Peca('S', 1);
\par             dcl peca98 : Peca := new Peca('S', 1);
\par             dcl peca99 : Peca := new Peca('S', 1);
\par             dcl peca100 : Peca := new Peca('S', 1);
\par             dcl peca101 : Peca := new Peca('S', 1);
\par         
\par             dcl peca102 : Peca := new Peca('T', 1);
\par             dcl peca103 : Peca := new Peca('T', 1);
\par             dcl peca104 : Peca := new Peca('T', 1);
\par             dcl peca105 : Peca := new Peca('T', 1);
\par             dcl peca106 : Peca := new Peca('T', 1);
\par             
\par             dcl peca107 : Peca := new Peca('U', 1);
\par             dcl peca108 : Peca := new Peca('U', 1);
\par             dcl peca109 : Peca := new Peca('U', 1);
\par             dcl peca110 : Peca := new Peca('U', 1);
\par             dcl peca111 : Peca := new Peca('U', 1);
\par             dcl peca112 : Peca := new Peca('U', 1);
\par             dcl peca113 : Peca := new Peca('U', 1);
\par             
\par             dcl peca114 : Peca := new Peca('V', 4);
\par             dcl peca115 : Peca := new Peca('V', 4);
\par             
\par             dcl peca116 : Peca := new Peca('X', 8);
\par             
\par             dcl peca117 : Peca := new Peca('Z', 8);
\par             
\par             dcl peca118 : Peca := new Peca('_',0);
\par             dcl peca119 : Peca := new Peca('_',0);
\par             dcl peca120 : Peca := new Peca('_',0);
\par             
\par             baralho := baralho^[peca1];
\par             baralho := baralho^[peca2];
\par             baralho := baralho^[peca3];
\par             baralho := baralho^[peca4];
\par             baralho := baralho^[peca5];
\par             baralho := baralho^[peca6];
\par             baralho := baralho^[peca7];
\par             baralho := baralho^[peca8];
\par             baralho := baralho^[peca9];
\par             baralho := baralho^[peca10];
\par             baralho := baralho^[peca11];
\par             baralho := baralho^[peca12];
\par             baralho := baralho^[peca13];
\par             baralho := baralho^[peca14];
\par             baralho := baralho^[peca15];
\par             baralho := baralho^[peca16];
\par             baralho := baralho^[peca17];
\par             baralho := baralho^[peca18];
\par             baralho := baralho^[peca19];
\par             baralho := baralho^[peca20];
\par             baralho := baralho^[peca21];
\par             baralho := baralho^[peca22];
\par             baralho := baralho^[peca23];
\par             baralho := baralho^[peca24];
\par             baralho := baralho^[peca25];
\par             baralho := baralho^[peca26];
\par             baralho := baralho^[peca27];
\par             baralho := baralho^[peca28];
\par             baralho := baralho^[peca29];
\par             baralho := baralho^[peca30];
\par             baralho := baralho^[peca31];
\par             baralho := baralho^[peca32];
\par             baralho := baralho^[peca33];
\par             baralho := baralho^[peca34];
\par             baralho := baralho^[peca35];
\par             baralho := baralho^[peca36];
\par             baralho := baralho^[peca37];
\par             baralho := baralho^[peca38];
\par             baralho := baralho^[peca39];
\par             baralho := baralho^[peca40];
\par             baralho := baralho^[peca41];
\par             baralho := baralho^[peca42];
\par             baralho := baralho^[peca43];
\par             baralho := baralho^[peca44];
\par             baralho := baralho^[peca45];
\par             baralho := baralho^[peca46];
\par             baralho := baralho^[peca47];
\par             baralho := baralho^[peca48];
\par             baralho := baralho^[peca49];
\par             baralho := baralho^[peca50];
\par             baralho := baralho^[peca51];
\par             baralho := baralho^[peca52];
\par             baralho := baralho^[peca53];
\par             baralho := baralho^[peca54];
\par             baralho := baralho^[peca55];
\par             baralho := baralho^[peca56];
\par             baralho := baralho^[peca57];
\par             baralho := baralho^[peca58];
\par             baralho := baralho^[peca59];
\par             baralho := baralho^[peca60];
\par             baralho := baralho^[peca61];
\par             baralho := baralho^[peca62];
\par             baralho := baralho^[peca63];
\par             baralho := baralho^[peca64];
\par             baralho := baralho^[peca65];
\par             baralho := baralho^[peca66];
\par             baralho := baralho^[peca67];
\par             baralho := baralho^[peca68];
\par             baralho := baralho^[peca69];
\par             baralho := baralho^[peca70];
\par             baralho := baralho^[peca71];
\par             baralho := baralho^[peca72];
\par             baralho := baralho^[peca73];
\par             baralho := baralho^[peca74];
\par             baralho := baralho^[peca75];
\par             baralho := baralho^[peca76];
\par             baralho := baralho^[peca77];
\par             baralho := baralho^[peca78];
\par             baralho := baralho^[peca79];
\par             baralho := baralho^[peca80];
\par             baralho := baralho^[peca81];
\par             baralho := baralho^[peca82];
\par             baralho := baralho^[peca83];
\par             baralho := baralho^[peca84];
\par             baralho := baralho^[peca85];
\par             baralho := baralho^[peca86];
\par             baralho := baralho^[peca87];
\par             baralho := baralho^[peca88];
\par             baralho := baralho^[peca89];
\par             baralho := baralho^[peca90];
\par             baralho := baralho^[peca91];
\par             baralho := baralho^[peca92];
\par             baralho := baralho^[peca93];
\par             baralho := baralho^[peca94];
\par             baralho := baralho^[peca95];
\par             baralho := baralho^[peca96];
\par             baralho := baralho^[peca97];
\par             baralho := baralho^[peca98];
\par             baralho := baralho^[peca99];
\par             baralho := baralho^[peca100];
\par             baralho := baralho^[peca101];
\par             baralho := baralho^[peca102];
\par             baralho := baralho^[peca103];
\par             baralho := baralho^[peca104];
\par             baralho := baralho^[peca105];
\par             baralho := baralho^[peca106];
\par             baralho := baralho^[peca107];
\par             baralho := baralho^[peca108];
\par             baralho := baralho^[peca109];
\par             baralho := baralho^[peca110];
\par             baralho := baralho^[peca111];
\par             baralho := baralho^[peca112];
\par             baralho := baralho^[peca113];
\par             baralho := baralho^[peca114];
\par             baralho := baralho^[peca115];
\par             baralho := baralho^[peca116];
\par             baralho := baralho^[peca117];
\par             baralho := baralho^[peca118];
\par             baralho := baralho^[peca119];
\par             baralho := baralho^[peca120];
\par             
\par            
\par \tab );\tab 
\par \tab 
\par \tab public criaJogadores: seq of Peca * seq of Peca ==> ()
\par        criaJogadores(m1,m2) == (        
\par        
\par \tab        dcl jog1 : Jogador := new Jogador(1);
\par \tab        dcl jog2 : Jogador := new Jogador(2);
\par \tab                
\par \tab        }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 jog1.setMao(m1);
\par \tab        jog2.setMao(m2);
\par \tab       
\par \tab        }{\insrsid333788\charrsid333788 jogadores := jogadores ^ [jog1,jog2];
\par       );
\par       
\par       
\par       public criaMaoJoador: () ==> seq of Peca
\par       \tab \tab \tab criaMaoJoador() == (
\par       \tab \tab \tab 
\par       \tab \tab \tab \tab dcl mao : seq of Peca := [];
\par       \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 dcl i : nat := 1;
\par       \tab \tab \tab \tab 
\par       \tab \tab \tab \tab while i <= 7 do
\par       \tab \tab \tab \tab }{\insrsid333788\charrsid333788 (
\par       \tab \tab \tab \tab \tab 
\par       \tab \tab \tab \tab \tab mao := mao^[baralho(i)];
\par       \tab \tab \tab \tab \tab 
\par       \tab \tab \tab \tab \tab i:= i +1;
\par       \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 );
\par       \tab \tab \tab \tab 
\par       \tab \tab \tab \tab return mao;
\par       \tab \tab \tab \tab 
\par       \tab \tab \tab );
\par       \tab \tab \tab 
\par       \tab \tab \tab 
\par       \tab \tab \tab 
\par       
\par       public preencheMao: nat ==> ()
\par       \tab  }{\insrsid333788\charrsid333788 preencheMao (i) == (
\par       
\par       \tab    dcl tmp : seq of Peca := jogadores(i).getMao();
\par \tab        
\par \tab        }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 if(len jogadores(i).getMao() < 7) then (
\par \tab        while(len tmp < 7) do 
\par \tab                
\par \tab                (tmp := tmp ^ [baralho(len baralho-1)];
\par \tab                }{\insrsid333788\charrsid333788 jogadores(i).setMao(tmp);
\par \tab        )
\par        \tab );
\par        );\tab 
\par        
\par        public actualizaPontos: nat * Jogador * nat * nat ==> ()
\par        \tab \tab actualizaPontos(pts_adicionar, jog, pos1, pos2) == (
\par        
\par \tab \tab        \tab dcl tab : Tabuleiro := new Tabuleiro();
\par \tab \tab                
\par \tab \tab \tab \tab if tab.verificaMultiplicador(pos1, pos2) then (
\par \tab \tab        
\par                \tab \tab dcl cel : Celula := new Celula(' ');
\par                  \tab dcl simbolo : char := ' ';
\par           \tab \tab \tab -- cel := tab(mk_Tabuleiro`Posicao(pos1,pos2));
\par                   \tab simbolo := cel.getSimbolo();
\par        
\par        \tab \tab \tab if simbolo = '#' then jog.setPontos(jog.getPontos()+ 3 * pts_adicionar);
\par    \tab \tab \tab \tab if simbolo = '*' then jog.setPontos(jog.getPontos()+ 2 * pts_adicionar);
\par \tab \tab         --if simbolo = '%' then jog.setPontos(og.getPontos()+  * pts_adicionar);
\par \tab \tab         --if simbolo = '$' then jog.setPontos(jog.getPontos()+ * pts_adicionar);        
\par              ) else 
\par        
\par        \tab \tab jog.setPontos(jog.getPontos()+pts_adicionar);        
\par       \tab );
\par \tab \tab 
\par \tab \tab public comparaPecas: Peca * Peca ==> bool
\par \tab \tab \tab comparaPecas(peca1,peca2) == (
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab dcl letra1 : char := peca1.getLetra();
\par \tab \tab \tab \tab dcl letra2 : char := peca2.getLetra();
\par \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 dcl result : bool := false;
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab if(letra1 = letra2)
\par \tab \tab \tab \tab \tab then  result := true
\par \tab \tab \tab \tab else result := false;
\par \tab \tab \tab \tab \tab  
\par \tab \tab \tab \tab }{\insrsid333788\charrsid333788 return result;
\par \tab \tab \tab );
\par \tab \tab \tab 
\par \tab \tab \tab 
\par \tab \tab -- TRUE se palavras iguais, sen\'e3o FALSE\tab 
\par \tab \tab public comparaPalavras: String * String ==> bool
\par \tab \tab \tab \tab \tab comparaPalavras(pal1,pal2) == (
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab dcl tam_pal1 : nat := len pal1;
\par \tab \tab \tab \tab \tab dcl tam_pal2 : nat := len pal2;
\par \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 dcl i : nat1 := 1;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab if(tam_pal1 <> tam_pal2) then return false;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 while(i <= tam_pal1) do
\par \tab \tab \tab \tab \tab (
\par \tab \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 if(pal1(i) <> pal2(i)) 
\par \tab \tab \tab \tab \tab \tab \tab then return false;
\par \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 i := i+1;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab return true;
\par \tab \tab \tab \tab );\tab 
\par \tab \tab \tab 
\par \tab \tab -- RETURN true, se a palavra existe no dicion\'e1rio
\par \tab \tab  }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 public verificaPalDicionario: String * set of seq of char ==> bool
\par \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 verificaPalDicionario(palavra,dicion) == (
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab dcl result : bool := false;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 result := palavra in set dicion;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 return result;
\par \tab \tab \tab \tab );
\par \tab \tab \tab \tab 
\par \tab \tab -- recebe o jogador que vai passar a vez\tab \tab 
\par \tab \tab public passarVez: Jogador ==> ()
\par \tab \tab \tab \tab passarVez(jog) == (
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab if(jog.getID() = jogadores(1).getID())
\par \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 then setVez(2);
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab if(jog.getID() = jogadores(2).getID())
\par \tab \tab \tab \tab \tab then setVez(1);
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab }{\insrsid333788\charrsid333788 );
\par \tab \tab \tab \tab 
\par \tab \tab public retiraPecaMao: Jogador * Peca ==> ()
\par \tab \tab \tab \tab \tab retiraPecaMao(jogador,pec) == (
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab dcl mao_jog : seq of Peca := jogador.getMao();
\par \tab \tab \tab \tab \tab dcl tam_mao : nat := len jogador.getMao();
\par \tab \tab \tab \tab \tab dcl nova_mao : seq of Peca := [];
\par \tab \tab \tab \tab \tab dcl nao_procura_mais : bool := false;
\par \tab \tab \tab \tab \tab dcl letra_p_retirar : char := pec.getLetra();
\par \tab \tab \tab \tab \tab dcl i : nat1 := 1;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab while(i <= tam_mao) do (
\par           \tab \tab \tab 
\par           \tab \tab \tab if(jogador.verificaLetrPosMao(letra_p_retirar,i) = true and nao_procura_mais = false  )
\par           \tab \tab \tab \tab then nao_procura_mais := true
\par           \tab \tab \tab \tab 
\par           \tab \tab \tab \tab else nova_mao := nova_mao^[mao_jog(i)];
\par           \tab \tab \tab \tab 
\par           \tab \tab \tab \tab i := i+1;
\par           \tab \tab \tab );
\par           \tab \tab \tab 
\par           \tab \tab \tab jogador.setMao(nova_mao);
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab );
\par \tab \tab \tab 
\par \tab \tab \tab 
\par \tab \tab \tab public retiraPecaBaralho: nat ==> Peca
\par \tab \tab \tab \tab \tab retiraPecaBaralho(pos_aleat) == (
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab dcl baralho : seq of Peca;
\par \tab \tab \tab \tab \tab dcl tam_bar : nat := len getBaralho();
\par \tab \tab \tab \tab \tab dcl baralho_act : seq of Peca := [];
\par \tab \tab \tab \tab \tab dcl nao_procura_mais : bool := false;
\par \tab \tab \tab \tab \tab dcl peca_ret : Peca;
\par \tab \tab \tab \tab \tab dcl i : nat1 := 1;
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab baralho := getBaralho();
\par \tab \tab \tab \tab \tab peca_ret := baralho(pos_aleat);
\par \tab \tab \tab \tab \tab  
\par \tab \tab \tab \tab \tab while(i <= tam_bar) do (
\par \tab           \tab \tab \tab 
\par \tab \tab           \tab \tab if(\tab peca_ret.getLetra() = baralho(i).getLetra() and nao_procura_mais = false)
\par \tab \tab           \tab \tab \tab \tab then nao_procura_mais := true
\par \tab \tab           \tab \tab \tab \tab 
\par \tab \tab           \tab \tab \tab \tab else baralho_act := baralho_act^[baralho(i)];
\par \tab           \tab \tab \tab \tab 
\par \tab           \tab \tab \tab \tab i := i+1;
\par \tab           \tab \tab );
\par \tab           \tab \tab 
\par \tab           \tab \tab 
\par \tab \tab \tab \tab \tab setBaralho(baralho_act);
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab return peca_ret;
\par \tab \tab \tab \tab );
\par \tab \tab 
\par \tab \tab -- jogada que coloca uma palavra no tabuleiro\tab \tab 
\par \tab \tab -- retorna um inteiro conforme a situacao
\par \tab \tab public jogada: Jogador * nat * nat * String * char ==>  nat
\par \tab \tab \tab \tab jogada(jogador,pos_x,pos_y,palavra,orient) == (
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab -- result = 0 em caso de nao se poder colocar a palavra, 1 se sucesso
\par \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 dcl result : nat := 0;
\par \tab \tab \tab \tab dcl dicio :  set of String;
\par \tab \tab \tab \tab }{\insrsid333788\charrsid333788 dcl tabuleiro : Tabuleiro := getTabuleiro();
\par \tab \tab \tab \tab dcl mao_jogador : seq of Peca := jogador.getMao();
\par \tab \tab \tab \tab dcl i : nat1 := 1;
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab dicio := getDicionario();
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab -- Se a palavra que o jogador quer inserir n\'e3o se encontra no dicionario retorna FALSE
\par \tab \tab \tab \tab if ( verificaPalDicionario(palavra,dicionario) = false)
\par \tab \tab \tab \tab \tab \tab then return 3;
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab -- Vai colocar a palavra na vertical
\par \tab \tab \tab \tab -- percorre a palavra
\par \tab \tab \tab \tab while(i <= len palavra) do
\par \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 (\tab 
\par \tab \tab \tab \tab \tab if(orient = 'b' or orient = 'B') then
\par \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 (
\par \tab \tab \tab \tab \tab \tab -- se a celula esta livre em baixo esta livre
\par \tab \tab \tab \tab \tab \tab if( tabuleiro.cel_ocupada(pos_x,pos_y + i) = false) then
\par \tab \tab \tab \tab \tab \tab (
\par \tab \tab \tab \tab \tab \tab \tab if( jogador.verificaLetraMao(palavra(i)) = true) then
\par \tab \tab \tab \tab \tab \tab \tab (
\par \tab \tab \tab \tab \tab \tab \tab \tab dcl pos_na_mao : nat := jogador.verificaLetraMaoPos(palavra(i));
\par \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab tabuleiro.colocaPeca( new Peca(palavra(i),mao_jogador(pos_na_mao).getPontuacao()),pos_x,pos_y+i);
\par \tab \tab \tab \tab \tab \tab \tab \tab retiraPecaMao(jogador,mao_jogador(pos_na_mao) );
\par \tab \tab \tab \tab \tab \tab \tab \tab result := 1;
\par \tab \tab \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab )else(
\par \tab \tab \tab \tab \tab \tab \tab -- se vai colocar a palavra na horizontal
\par \tab \tab \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 if(orient = 'd' or orient = 'D') then(
\par \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab }{\insrsid333788\charrsid333788 -- se a celula esta livre em baixo 
\par \tab \tab \tab \tab \tab \tab \tab \tab if( tabuleiro.cel_ocupada(pos_x+i,pos_y) = false) then
\par \tab \tab \tab \tab \tab \tab \tab \tab (
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab if( jogador.verificaLetraMao(palavra(i)) = true) then
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab (
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab dcl pos_na_mao : nat := jogador.verificaLetraMaoPos(palavra(i));
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab tabuleiro.colocaPeca( new Peca(palavra(i),mao_jogador(pos_na_mao).getPontuacao()),pos_x+i,pos_y);
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab retiraPecaMao(jogador,mao_jogador(pos_na_mao));
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab }{\lang1024\langfe1024\langnp2057\insrsid333788\charrsid4661156 result := 1;
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab \tab i := i+1;
\par \tab \tab \tab \tab );
\par \tab \tab \tab \tab \tab 
\par \tab \tab \tab \tab 
\par \tab \tab \tab \tab return result;
\par \tab \tab \tab }{\insrsid333788\charrsid333788 );\tab 
\par \tab \tab \tab 
\par \tab \tab -- TODO criar dicionario
\par \tab \tab -- TODO jogada
\par \tab \tab -- TODO verificar tabuleiro
\par \tab \tab 
\par end Jogo}{\insrsid333788 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid333788 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid333788\charrsid333788 
\par }\pard\plain \s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid333788 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\insrsid333788\charrsid333788 Jogo}{
\noproof0\insrsid333788\charrsid333788 
\par }}