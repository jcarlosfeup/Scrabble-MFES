{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang2070\deflangfe2070{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}
{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}
{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \snext15 VDM;}{\*\cs16 \additive \f5\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_COV;}{\*\cs17 \additive \f5\cf6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_NCOV;}{
\s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \sbasedon15 \snext18 VDM_TC_TABLE;}{\s19\ql \li0\ri0\widctlpar
\tqc\tx4252\tqr\tx8504\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \sbasedon0 \snext19 \styrsid6317446 header;}{\s20\ql \li0\ri0\widctlpar
\tqc\tx4252\tqr\tx8504\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \sbasedon0 \snext20 \styrsid6317446 footer;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid1986383\rsid6317446
\rsid10120619\rsid11169555\rsid16132747}{\*\generator Microsoft Word 11.0.5604;}{\info{\title class TestAll}{\author anamarg83@hotmail.com}{\operator Mario}{\creatim\yr2012\mo12\dy7\hr22\min11}{\revtim\yr2012\mo12\dy7\hr22\min23}{\version3}{\edmins1}
{\nofpages3}{\nofwords451}{\nofchars2439}{\*\company IFAD}{\nofcharsws2885}{\vern24689}}\margl1701\margr1701\margt1417\margb1417 
\widowctrl\ftnbj\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dghspace180\dgvspace180\dghorigin1701\dgvorigin1984\dghshow0\dgvshow0
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl\nojkernpunct\rsidroot11169555 \fet0{\*\ftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 
{\insrsid6317446 \chftnsep 
\par }}{\*\ftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid6317446 \chftnsepc 
\par }}{\*\aftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid6317446 \chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid6317446 \chftnsepc 
\par }}\sectd \linex0\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16132747 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\lang1024\langfe1024\langnp2057\insrsid16132747\charrsid6317446 
class TestTabuleiro
\par 
\par operations
\par 
\par \tab static public AssertTrue : bool ==> ()
\par \tab \tab AssertTrue(a) == return
\par \tab pre a;
\par 
\par \tab 
\par \tab }{\insrsid16132747 static public testaTabuleiro: () ==> ()
\par \tab  testaTabuleiro () == (
\par \tab  
\par \tab  \tab dcl t : Tabuleiro := new Tabuleiro();
\par \tab  \tab dcl tam : nat := 0;
\par \tab  \tab 
\par \tab  \tab tam := (card (dom t.getTabuleiro() ));
\par \tab  \tab 
\par \tab  \tab -- 15*15 = 225
\par \tab  \tab AssertTrue( tam = 225);
\par \tab  
\par \tab  );
\par \tab  
\par \tab  static public testaAddToPosOcupadas: () ==> ()
\par \tab  \tab testaAddToPosOcupadas () == (
\par \tab  \tab 
\par \tab  \tab dcl t : Tabuleiro := new Tabuleiro();
\par \tab  \tab 
\par \tab  \tab t.addToPosOcupadas(mk_Tabuleiro`Posicao(2,3));
\par \tab  \tab t.addToPosOcupadas(mk_Tabuleiro`Posicao(6,10));
\par \tab  \tab AssertTrue( t.numPosOcupadas()  = 2);
\par \tab  \tab 
\par \tab  \tab );
\par \tab  
\par \tab 
\par \tab  static public testaColocaPeca: () ==> ()
\par \tab \tab  \tab testaColocaPeca () == (
\par \tab \tab  \tab 
\par \tab \tab  \tab dcl t : Tabuleiro := new Tabuleiro();
\par \tab \tab  \tab dcl peca1 : Peca := new Peca('H',10);
\par \tab \tab  \tab dcl peca2 : Peca := new Peca('A',20);
\par \tab \tab  \tab dcl peca3 : Peca := new Peca('T',30);
\par \tab \tab  
\par \tab \tab  \tab t.colocaPeca(peca1,1,1);
\par \tab \tab  \tab t.colocaPeca(peca2,14,1);
\par \tab \tab  \tab t.colocaPeca(peca3,15,1);
\par \tab \tab 
\par \tab \tab  \tab AssertTrue( t.getCelula(1,1)  = 'H');
\par \tab \tab  \tab AssertTrue( t.getCelula(14,1)  = 'A');
\par \tab \tab  \tab AssertTrue( t.getCelula(15,1)  = 'T');
\par \tab );
\par \tab 
\par \tab static public testaCelOcupada: () ==> ()
\par \tab  \tab \tab testaCelOcupada() == (
\par \tab  \tab \tab 
\par \tab  \tab \tab dcl t : Tabuleiro := new Tabuleiro();
\par \tab  \tab \tab dcl peca1 : Peca := new Peca('H',10);
\par \tab \tab  \tab dcl peca2 : Peca := new Peca('A',20);
\par \tab \tab  \tab 
\par \tab \tab  \tab t.colocaPeca(peca1,3,2);
\par \tab \tab  \tab t.colocaPeca(peca2,4,5);
\par \tab \tab  \tab 
\par \tab  \tab \tab AssertTrue( t.cel_ocupada(3,2) = true);
\par \tab  \tab \tab AssertTrue( t.cel_ocupada(4,5) = true);
\par \tab  \tab \tab AssertTrue( t.cel_ocupada(2,3) = false);
\par \tab  \tab \tab 
\par \tab  \tab );
\par \tab  \tab 
\par \tab  \tab static public testaColocaMulti: () ==> ()
\par \tab  \tab \tab testaColocaMulti() == (
\par \tab  \tab \tab 
\par \tab  \tab \tab dcl t : Tabuleiro := new Tabuleiro();
\par \tab  \tab \tab 
\par \tab  \tab \tab t.colocaMultiplicador(2,2,'#');
\par \tab  \tab \tab t.colocaMultiplicador(5,3,'*');
\par \tab  \tab \tab t.colocaMultiplicador(8,10,'$');
\par \tab  \tab \tab -- teste que falha, pois nao respeita a pre-condicao
\par \tab  \tab \tab -- t.colocaMultiplicador(4,2,'d');
\par \tab \tab  \tab 
\par \tab \tab  \tab AssertTrue( t.getCelula(2,2) = '#');
\par \tab \tab  \tab AssertTrue( t.getCelula(5,3) = '*');
\par \tab \tab  \tab AssertTrue( t.getCelula(8,10) = '$');
\par \tab  \tab );
\par \tab  \tab 
\par \tab  \tab static public testaVerificaMultiplicador: () ==> ()
\par                 testaVerificaMultiplicador () == (
\par        
\par                    dcl t : Tabuleiro := new Tabuleiro();
\par                  
\par                    t.colocaMultiplicador(5,2,'#');
\par                    t.colocaMultiplicador(4,7,'*');
\par                            
\par                    AssertTrue (t.verificaMultiplicador(5,2) = true);
\par                    AssertTrue (t.verificaMultiplicador(4,7) = true);
\par                    AssertTrue (t.verificaMultiplicador(10,11) <> true);
\par                 );
\par                 
\par          
\par          static public runAllTabuleiroTests: () ==> ()
\par \tab \tab \tab  runAllTabuleiroTests() == (
\par \tab \tab \tab  
\par \tab \tab \tab  \tab testaTabuleiro();
\par \tab \tab \tab  \tab testaAddToPosOcupadas();
\par \tab \tab \tab  \tab testaColocaPeca();
\par \tab \tab \tab  \tab testaCelOcupada();
\par \tab \tab \tab  \tab testaColocaMulti();
\par \tab \tab \tab  \tab testaVerificaMultiplicador();
\par \tab \tab \tab  );
\par \tab  \tab 
\par 
\par end TestTabuleiro}{\insrsid11169555 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16132747 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\lang2070\langfe2070\langnp2070\insrsid16132747\charrsid6317446 
\par }{\fs28\lang2070\langfe2070\langnp2070\insrsid6317446 Cobertura de testes}{\fs28\lang2070\langfe2070\langnp2070\insrsid6317446\charrsid6317446 
\par }\pard\plain \s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid16132747 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\insrsid16132747 TestTabuleiro}{
\noproof0\insrsid16132747\charrsid10120619 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\f2\lang1024\langfe1024\noproof\langnp2070\insrsid16132747 
\par }}