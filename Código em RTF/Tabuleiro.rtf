{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang2070\deflangfe2070{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f194\froman\fcharset238\fprq2 Times New Roman CE;}
{\f195\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f197\froman\fcharset161\fprq2 Times New Roman Greek;}{\f198\froman\fcharset162\fprq2 Times New Roman Tur;}{\f199\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f200\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f201\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f202\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f214\fmodern\fcharset238\fprq1 Courier New CE;}
{\f215\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f217\fmodern\fcharset161\fprq1 Courier New Greek;}{\f218\fmodern\fcharset162\fprq1 Courier New Tur;}{\f219\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f220\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f221\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f222\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \snext15 VDM;}{\*\cs16 \additive \f5\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_COV;}{\*\cs17 \additive \f5\cf6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_NCOV;}{
\s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 \sbasedon15 \snext18 VDM_TC_TABLE;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}
{\*\rsidtbl \rsid5402663}{\*\generator Microsoft Word 11.0.6568;}{\info{\title class Tabuleiro }{\author anamarg83@hotmail.com}{\operator anamarg83@hotmail.com}{\creatim\yr2012\mo12\dy7\hr22\min8}{\revtim\yr2012\mo12\dy7\hr22\min8}{\version1}{\edmins0}
{\nofpages4}{\nofwords971}{\nofchars5244}{\*\company IFAD}{\nofcharsws6203}{\vern24579}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dghspace180\dgvspace180\dghorigin1701\dgvorigin1984\dghshow0
\dgvshow0\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl\nojkernpunct\rsidroot5402663 \fet0{\*\template C:\\Users\\AnaMargarida\\Desktop\\VDM++Toolbox_v8.1.1b\\word\\VDM.dot}\sectd \linex0\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5402663 \shading2000 
\f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\insrsid5402663\charrsid5402663 class Tabuleiro 
\par \tab 
\par \tab -- NOTAS: seq permite repetidos, set nao
\par \tab types 
\par \tab \tab public Posicao:: x:nat  y:nat;
\par \tab 
\par \tab instance variables 
\par \tab \tab 
\par \tab \tab private tabuleiro : map Posicao to Celula := \{|->\};
\par         private posicoesOcupadas : set of Posicao := \{\};
\par \tab 
\par \tab operations 
\par \tab \tab 
\par \tab \tab public Tabuleiro:() ==> Tabuleiro
\par         \tab \tab Tabuleiro() == (
\par              
\par            \tab dcl x:nat :=0; 
\par             dcl y:nat :=0;
\par               
\par               while(y < 15) do (
\par        \tab \tab --for all y in set \{0,...,19\} do ( 
\par           \tab \tab  while(x < 15) do(
\par               \tab \tab  tabuleiro := tabuleiro ++ \{mk_Posicao(x,y)|-> new Celula('.')\};
\par               \tab \tab  x := x+1;
\par            \tab \tab  );
\par                  
\par                  x := 0;
\par                  y := y+1;           
\par        \tab \tab );
\par        \tab \tab 
\par        \tab \tab  -- * - duplica valor letra
\par        \tab \tab colocaMultiplicador(0,3,'*');
\par        \tab \tab colocaMultiplicador(3,0,'*');
\par        \tab \tab colocaMultiplicador(11,0,'*');
\par        \tab \tab colocaMultiplicador(0,11,'*');
\par        \tab \tab colocaMultiplicador(14,3,'*');
\par        \tab \tab colocaMultiplicador(3,14,'*');
\par        \tab \tab colocaMultiplicador(11,14,'*');
\par        \tab \tab colocaMultiplicador(14,11,'*');
\par        \tab \tab colocaMultiplicador(6,6,'*');
\par        \tab \tab colocaMultiplicador(8,8,'*');
\par        \tab \tab colocaMultiplicador(8,6,'*');
\par        \tab \tab colocaMultiplicador(6,8,'*');
\par        \tab \tab colocaMultiplicador(6,2,'*');
\par        \tab \tab colocaMultiplicador(2,6,'*');
\par        \tab \tab colocaMultiplicador(7,4,'*');
\par        \tab \tab colocaMultiplicador(4,7,'*');
\par        \tab \tab colocaMultiplicador(8,2,'*');
\par        \tab \tab colocaMultiplicador(2,8,'*');
\par        \tab \tab colocaMultiplicador(12,6,'*');
\par        \tab \tab colocaMultiplicador(6,12,'*');
\par        \tab \tab colocaMultiplicador(11,7,'*');
\par        \tab \tab colocaMultiplicador(7,11,'*');
\par        \tab \tab colocaMultiplicador(12,8,'*');
\par        \tab \tab colocaMultiplicador(8,12,'*');
\par        \tab \tab 
\par        \tab \tab -- # - triplica valor letra
\par \tab \tab \tab colocaMultiplicador(1,5,'#');
\par \tab \tab \tab colocaMultiplicador(5,1,'#');
\par \tab \tab \tab colocaMultiplicador(9,1,'#');
\par \tab \tab \tab colocaMultiplicador(1,9,'#');
\par \tab \tab \tab colocaMultiplicador(5,13,'#');
\par \tab \tab \tab colocaMultiplicador(13,5,'#');
\par \tab \tab \tab colocaMultiplicador(9,13,'#');
\par \tab \tab \tab colocaMultiplicador(13,9,'#');
\par \tab \tab \tab colocaMultiplicador(5,5,'#');
\par \tab \tab \tab colocaMultiplicador(9,9,'#');
\par \tab \tab \tab colocaMultiplicador(5,9,'#');
\par \tab \tab \tab colocaMultiplicador(9,5,'#');
\par         \tab 
\par         \tab 
\par         \tab -- $ - duplica valor palavra
\par \tab \tab \tab colocaMultiplicador(1,1,'$');
\par \tab \tab \tab colocaMultiplicador(1,13,'$');
\par \tab \tab \tab colocaMultiplicador(2,2,'$');
\par \tab \tab \tab colocaMultiplicador(2,12,'$');
\par \tab \tab \tab colocaMultiplicador(3,3,'$');
\par \tab \tab \tab colocaMultiplicador(3,11,'$');
\par \tab \tab \tab colocaMultiplicador(4,4,'$');
\par \tab \tab \tab colocaMultiplicador(4,10,'$');
\par \tab \tab \tab colocaMultiplicador(7,7,'$');
\par \tab \tab \tab colocaMultiplicador(10,4,'$');
\par \tab \tab \tab colocaMultiplicador(10,10,'$');
\par \tab \tab \tab colocaMultiplicador(11,3,'$');
\par \tab \tab \tab colocaMultiplicador(11,11,'$');
\par \tab \tab \tab colocaMultiplicador(12,2,'$');
\par \tab \tab \tab colocaMultiplicador(12,12,'$');
\par \tab \tab \tab colocaMultiplicador(13,1,'$');
\par \tab \tab \tab colocaMultiplicador(13,13,'$');
\par \tab \tab \tab 
\par \tab \tab \tab -- % - triplica valor palavra
\par        \tab \tab colocaMultiplicador(0,0,'%');
\par        \tab \tab colocaMultiplicador(0,7,'%');
\par        \tab \tab colocaMultiplicador(0,14,'%');
\par        \tab \tab colocaMultiplicador(7,0,'%');
\par        \tab \tab colocaMultiplicador(7,14,'%');
\par        \tab \tab colocaMultiplicador(14,0,'%');
\par        \tab \tab colocaMultiplicador(14,7,'%');
\par        \tab \tab colocaMultiplicador(14,14,'%');
\par \tab \tab \tab 
\par \tab \tab \tab 
\par \tab \tab \tab return self;
\par          );
\par         
\par         public getTabuleiro : () ==> map Posicao to Celula
\par         \tab getTabuleiro() == return tabuleiro;
\par         \tab 
\par         public setTabuleiro : map Posicao to Celula ==> ()
\par         \tab \tab setTabuleiro(tab) == tabuleiro := tab;
\par         \tab \tab 
\par         \tab \tab 
\par         public addToPosOcupadas : Posicao ==> ()
\par         \tab addToPosOcupadas(pos) == 
\par         \tab \tab posicoesOcupadas := posicoesOcupadas union \{pos\};
\par         \tab \tab 
\par         public numPosOcupadas : () ==> nat
\par         \tab numPosOcupadas() == (
\par         \tab \tab return (card posicoesOcupadas);
\par         );
\par         \tab 
\par         public colocaPeca: Peca * nat * nat ==> ()
\par         \tab colocaPeca(peca,pos_horiz,pos_vert) == (
\par         \tab 
\par         \tab \tab tabuleiro := tabuleiro ++ \{ mk_Posicao(pos_horiz,pos_vert) |-> new Celula(peca.getLetra() ) \};
\par         \tab 
\par         );
\par         
\par         -- Dado um x e um y devolve o caracter que estiver nessa posicao
\par         public getCelula: nat * nat ==> char
\par         \tab \tab getCelula(pos_x,pos_y) == (
\par         \tab \tab 
\par         \tab \tab dcl posicao : Posicao := mk_Posicao(pos_x,pos_y);
\par         \tab \tab dcl simbolo : char := ' ';
\par         \tab \tab dcl cel : Celula := new Celula(' ');
\par         \tab \tab 
\par         \tab \tab cel := tabuleiro(posicao);
\par         \tab \tab simbolo := cel.getSimbolo();
\par         \tab \tab 
\par         \tab \tab return simbolo;
\par         );
\par         
\par          public cel_ocupada: nat * nat ==> bool
\par         \tab cel_ocupada(pos_x,pos_y) == (
\par         \tab 
\par         \tab dcl posicao : Posicao := mk_Posicao(pos_x,pos_y);
\par         \tab dcl cel : Celula := new Celula(' ');
\par         \tab dcl simbolo : char := ' ';
\par         \tab dcl result : bool := false;
\par         \tab 
\par         \tab cel := tabuleiro(posicao);
\par         \tab simbolo := cel.getSimbolo();
\par         \tab 
\par         \tab if(simbolo = '.' or simbolo ='#' or simbolo ='*' or simbolo = '%' or simbolo = '$')
\par         \tab \tab 
\par         \tab \tab then result := false
\par         \tab else result := true;
\par         \tab 
\par         \tab return result;
\par         );\tab 
\par         
\par         -- * - duplica valor letra
\par         -- # - triplica valor letra
\par         -- $ - duplica valor palavra
\par         -- % - triplica valor palavra
\par        public colocaMultiplicador: nat * nat * char ==> ()
\par         \tab colocaMultiplicador(pos_x,pos_y,simbolo) == (
\par         \tab 
\par         \tab 
\par         \tab \tab tabuleiro := tabuleiro ++ \{ mk_Posicao(pos_x,pos_y) |-> new Celula(simbolo) \};
\par         \tab )
\par         \tab pre simbolo in set \{'#','*','$','%'\};
\par         
\par        
\par        public verificaMultiplicador: nat * nat ==> bool 
\par                 verificaMultiplicador(pos_x,pos_y) == (
\par                         
\par                 dcl posicao : Posicao := mk_Posicao(pos_x,pos_y);
\par            \tab \tab dcl cel : Celula := new Celula(' ');
\par                 dcl simbolo : char := ' ';
\par                 
\par                 cel := tabuleiro(posicao);
\par                 simbolo := cel.getSimbolo();
\par                 
\par                 if simbolo = '#' then return true;
\par                 if simbolo = '*' then return true;
\par                 if simbolo = '%' then return true;
\par                 if simbolo = '$' then return true 
\par                 \tab else return false                   
\par               );
\par      \tab 
\par         
\par end Tabuleiro}{\insrsid5402663 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5402663 \fs20\lang1033\langfe2070\cgrid\langnp1033\langfenp2070 {\insrsid5402663\charrsid5402663 
\par }\pard\plain \s18\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid5402663 \shading2000 \f2\fs20\lang1024\langfe1024\cgrid\noproof\langnp2070\langfenp2070 {\insrsid5402663\charrsid5402663 Tabuleiro}{
\noproof0\insrsid5402663\charrsid5402663 
\par }}